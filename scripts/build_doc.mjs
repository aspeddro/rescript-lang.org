// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Path from "path";
import * as Docgen from "../src/other/Docgen.mjs";
import * as Process from "process";
import * as Belt_List from "rescript/lib/es6/belt_List.js";
import * as Child_process from "child_process";

var args = Process.argv;

var argsLen = args.length;

var analysisExePath = args[argsLen - 2 | 0];

var compiler_path = args[argsLen - 1 | 0];

var libPath = Path.join(compiler_path, "lib", "ocaml");

var entryPointLibs = ["js.ml"];

var docs = entryPointLibs.map(function (libFile) {
      var entryPointFile = Path.join(libPath, libFile);
      var output = Child_process.execSync("" + analysisExePath + " extractDocs " + entryPointFile + "", {}).toString().trim();
      var doc = Docgen.decodeFromJson(JSON.parse(output));
      var a = Belt_List.fromArray(doc.items);
      var getModules = function (_lst, _moduleNames) {
        while(true) {
          var moduleNames = _moduleNames;
          var lst = _lst;
          if (!lst) {
            return moduleNames;
          }
          var match = lst.hd;
          var id;
          var items;
          switch (match.TAG | 0) {
            case /* Value */0 :
            case /* Type */1 :
                _lst = lst.tl;
                continue ;
            case /* Module */2 :
                var match$1 = match._0;
                id = match$1.id;
                items = match$1.items;
                break;
            case /* ModuleAlias */3 :
                id = match.id;
                items = match.items;
                break;
            
          }
          _moduleNames = {
            hd: id,
            tl: moduleNames
          };
          _lst = Belt_List.concatMany([
                lst.tl,
                Belt_List.fromArray(items)
              ]);
          continue ;
        };
      };
      return Belt_List.toArray(getModules(a, /* [] */0));
    });

console.log(docs);

export {
  args ,
  argsLen ,
  analysisExePath ,
  compiler_path ,
  libPath ,
  entryPointLibs ,
  docs ,
}
/* args Not a pure module */
