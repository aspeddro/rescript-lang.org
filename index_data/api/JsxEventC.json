{
  "name": "JsxEventC",
  "docstrings": [
    "Internal: use JsxEvent directly."
  ],
  "items": [
    {
      "id": "JsxEventC.synthetic",
      "kind": "type",
      "name": "synthetic",
      "signature": "type synthetic<'a>",
      "docstrings": []
    },
    {
      "id": "MakeEventWithType.JsxEventC",
      "kind": "module",
      "item": {
        "name": "MakeEventWithType",
        "docstrings": [],
        "items": [
          {
            "id": "JsxEventC.MakeEventWithType.bubbles",
            "kind": "value",
            "name": "bubbles",
            "signature": "let bubbles: Type.t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.MakeEventWithType.cancelable",
            "kind": "value",
            "name": "cancelable",
            "signature": "let cancelable: Type.t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.MakeEventWithType.currentTarget",
            "kind": "value",
            "name": "currentTarget",
            "signature": "let currentTarget: Type.t => {..}",
            "docstrings": []
          },
          {
            "id": "JsxEventC.MakeEventWithType.defaultPrevented",
            "kind": "value",
            "name": "defaultPrevented",
            "signature": "let defaultPrevented: Type.t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.MakeEventWithType.eventPhase",
            "kind": "value",
            "name": "eventPhase",
            "signature": "let eventPhase: Type.t => int",
            "docstrings": []
          },
          {
            "id": "JsxEventC.MakeEventWithType.isTrusted",
            "kind": "value",
            "name": "isTrusted",
            "signature": "let isTrusted: Type.t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.MakeEventWithType.nativeEvent",
            "kind": "value",
            "name": "nativeEvent",
            "signature": "let nativeEvent: Type.t => {..}",
            "docstrings": []
          },
          {
            "id": "JsxEventC.MakeEventWithType.preventDefault",
            "kind": "value",
            "name": "preventDefault",
            "signature": "let preventDefault: Type.t => unit",
            "docstrings": []
          },
          {
            "id": "JsxEventC.MakeEventWithType.isDefaultPrevented",
            "kind": "value",
            "name": "isDefaultPrevented",
            "signature": "let isDefaultPrevented: Type.t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.MakeEventWithType.stopPropagation",
            "kind": "value",
            "name": "stopPropagation",
            "signature": "let stopPropagation: Type.t => unit",
            "docstrings": []
          },
          {
            "id": "JsxEventC.MakeEventWithType.isPropagationStopped",
            "kind": "value",
            "name": "isPropagationStopped",
            "signature": "let isPropagationStopped: Type.t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.MakeEventWithType.target",
            "kind": "value",
            "name": "target",
            "signature": "let target: Type.t => {..}",
            "docstrings": []
          },
          {
            "id": "JsxEventC.MakeEventWithType.timeStamp",
            "kind": "value",
            "name": "timeStamp",
            "signature": "let timeStamp: Type.t => float",
            "docstrings": []
          },
          {
            "id": "JsxEventC.MakeEventWithType.type_",
            "kind": "value",
            "name": "type_",
            "signature": "let type_: Type.t => string",
            "docstrings": []
          },
          {
            "id": "JsxEventC.MakeEventWithType.persist",
            "kind": "value",
            "name": "persist",
            "signature": "let persist: Type.t => unit",
            "docstrings": []
          }
        ]
      }
    },
    {
      "id": "Synthetic.JsxEventC",
      "kind": "module",
      "item": {
        "name": "Synthetic",
        "docstrings": [],
        "items": [
          {
            "id": "JsxEventC.Synthetic.tag",
            "kind": "type",
            "name": "tag",
            "signature": "type tag",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Synthetic.t",
            "kind": "type",
            "name": "t",
            "signature": "type t = synthetic<tag>",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Synthetic.bubbles",
            "kind": "value",
            "name": "bubbles",
            "signature": "let bubbles: synthetic<'a> => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Synthetic.cancelable",
            "kind": "value",
            "name": "cancelable",
            "signature": "let cancelable: synthetic<'a> => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Synthetic.currentTarget",
            "kind": "value",
            "name": "currentTarget",
            "signature": "let currentTarget: synthetic<'a> => {..}",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Synthetic.defaultPrevented",
            "kind": "value",
            "name": "defaultPrevented",
            "signature": "let defaultPrevented: synthetic<'a> => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Synthetic.eventPhase",
            "kind": "value",
            "name": "eventPhase",
            "signature": "let eventPhase: synthetic<'a> => int",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Synthetic.isTrusted",
            "kind": "value",
            "name": "isTrusted",
            "signature": "let isTrusted: synthetic<'a> => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Synthetic.nativeEvent",
            "kind": "value",
            "name": "nativeEvent",
            "signature": "let nativeEvent: synthetic<'a> => {..}",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Synthetic.preventDefault",
            "kind": "value",
            "name": "preventDefault",
            "signature": "let preventDefault: synthetic<'a> => unit",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Synthetic.isDefaultPrevented",
            "kind": "value",
            "name": "isDefaultPrevented",
            "signature": "let isDefaultPrevented: synthetic<'a> => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Synthetic.stopPropagation",
            "kind": "value",
            "name": "stopPropagation",
            "signature": "let stopPropagation: synthetic<'a> => unit",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Synthetic.isPropagationStopped",
            "kind": "value",
            "name": "isPropagationStopped",
            "signature": "let isPropagationStopped: synthetic<'a> => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Synthetic.target",
            "kind": "value",
            "name": "target",
            "signature": "let target: synthetic<'a> => {..}",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Synthetic.timeStamp",
            "kind": "value",
            "name": "timeStamp",
            "signature": "let timeStamp: synthetic<'a> => float",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Synthetic.type_",
            "kind": "value",
            "name": "type_",
            "signature": "let type_: synthetic<'a> => string",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Synthetic.persist",
            "kind": "value",
            "name": "persist",
            "signature": "let persist: synthetic<'a> => unit",
            "docstrings": []
          }
        ]
      }
    },
    {
      "id": "JsxEventC.toSyntheticEvent",
      "kind": "value",
      "name": "toSyntheticEvent",
      "signature": "let toSyntheticEvent: synthetic<'a> => Synthetic.t",
      "docstrings": []
    },
    {
      "id": "Clipboard.JsxEventC",
      "kind": "module",
      "item": {
        "name": "Clipboard",
        "docstrings": [],
        "items": [
          {
            "id": "JsxEventC.Clipboard.tag",
            "kind": "type",
            "name": "tag",
            "signature": "type tag",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Clipboard.t",
            "kind": "type",
            "name": "t",
            "signature": "type t = synthetic<tag>",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Clipboard.bubbles",
            "kind": "value",
            "name": "bubbles",
            "signature": "let bubbles: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Clipboard.cancelable",
            "kind": "value",
            "name": "cancelable",
            "signature": "let cancelable: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Clipboard.currentTarget",
            "kind": "value",
            "name": "currentTarget",
            "signature": "let currentTarget: t => {..}",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Clipboard.defaultPrevented",
            "kind": "value",
            "name": "defaultPrevented",
            "signature": "let defaultPrevented: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Clipboard.eventPhase",
            "kind": "value",
            "name": "eventPhase",
            "signature": "let eventPhase: t => int",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Clipboard.isTrusted",
            "kind": "value",
            "name": "isTrusted",
            "signature": "let isTrusted: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Clipboard.nativeEvent",
            "kind": "value",
            "name": "nativeEvent",
            "signature": "let nativeEvent: t => {..}",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Clipboard.preventDefault",
            "kind": "value",
            "name": "preventDefault",
            "signature": "let preventDefault: t => unit",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Clipboard.isDefaultPrevented",
            "kind": "value",
            "name": "isDefaultPrevented",
            "signature": "let isDefaultPrevented: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Clipboard.stopPropagation",
            "kind": "value",
            "name": "stopPropagation",
            "signature": "let stopPropagation: t => unit",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Clipboard.isPropagationStopped",
            "kind": "value",
            "name": "isPropagationStopped",
            "signature": "let isPropagationStopped: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Clipboard.target",
            "kind": "value",
            "name": "target",
            "signature": "let target: t => {..}",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Clipboard.timeStamp",
            "kind": "value",
            "name": "timeStamp",
            "signature": "let timeStamp: t => float",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Clipboard.type_",
            "kind": "value",
            "name": "type_",
            "signature": "let type_: t => string",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Clipboard.persist",
            "kind": "value",
            "name": "persist",
            "signature": "let persist: t => unit",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Clipboard.clipboardData",
            "kind": "value",
            "name": "clipboardData",
            "signature": "let clipboardData: t => {..}",
            "docstrings": []
          }
        ]
      }
    },
    {
      "id": "Composition.JsxEventC",
      "kind": "module",
      "item": {
        "name": "Composition",
        "docstrings": [],
        "items": [
          {
            "id": "JsxEventC.Composition.tag",
            "kind": "type",
            "name": "tag",
            "signature": "type tag",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Composition.t",
            "kind": "type",
            "name": "t",
            "signature": "type t = synthetic<tag>",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Composition.bubbles",
            "kind": "value",
            "name": "bubbles",
            "signature": "let bubbles: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Composition.cancelable",
            "kind": "value",
            "name": "cancelable",
            "signature": "let cancelable: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Composition.currentTarget",
            "kind": "value",
            "name": "currentTarget",
            "signature": "let currentTarget: t => {..}",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Composition.defaultPrevented",
            "kind": "value",
            "name": "defaultPrevented",
            "signature": "let defaultPrevented: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Composition.eventPhase",
            "kind": "value",
            "name": "eventPhase",
            "signature": "let eventPhase: t => int",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Composition.isTrusted",
            "kind": "value",
            "name": "isTrusted",
            "signature": "let isTrusted: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Composition.nativeEvent",
            "kind": "value",
            "name": "nativeEvent",
            "signature": "let nativeEvent: t => {..}",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Composition.preventDefault",
            "kind": "value",
            "name": "preventDefault",
            "signature": "let preventDefault: t => unit",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Composition.isDefaultPrevented",
            "kind": "value",
            "name": "isDefaultPrevented",
            "signature": "let isDefaultPrevented: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Composition.stopPropagation",
            "kind": "value",
            "name": "stopPropagation",
            "signature": "let stopPropagation: t => unit",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Composition.isPropagationStopped",
            "kind": "value",
            "name": "isPropagationStopped",
            "signature": "let isPropagationStopped: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Composition.target",
            "kind": "value",
            "name": "target",
            "signature": "let target: t => {..}",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Composition.timeStamp",
            "kind": "value",
            "name": "timeStamp",
            "signature": "let timeStamp: t => float",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Composition.type_",
            "kind": "value",
            "name": "type_",
            "signature": "let type_: t => string",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Composition.persist",
            "kind": "value",
            "name": "persist",
            "signature": "let persist: t => unit",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Composition.data",
            "kind": "value",
            "name": "data",
            "signature": "let data: t => string",
            "docstrings": []
          }
        ]
      }
    },
    {
      "id": "Keyboard.JsxEventC",
      "kind": "module",
      "item": {
        "name": "Keyboard",
        "docstrings": [],
        "items": [
          {
            "id": "JsxEventC.Keyboard.tag",
            "kind": "type",
            "name": "tag",
            "signature": "type tag",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Keyboard.t",
            "kind": "type",
            "name": "t",
            "signature": "type t = synthetic<tag>",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Keyboard.bubbles",
            "kind": "value",
            "name": "bubbles",
            "signature": "let bubbles: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Keyboard.cancelable",
            "kind": "value",
            "name": "cancelable",
            "signature": "let cancelable: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Keyboard.currentTarget",
            "kind": "value",
            "name": "currentTarget",
            "signature": "let currentTarget: t => {..}",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Keyboard.defaultPrevented",
            "kind": "value",
            "name": "defaultPrevented",
            "signature": "let defaultPrevented: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Keyboard.eventPhase",
            "kind": "value",
            "name": "eventPhase",
            "signature": "let eventPhase: t => int",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Keyboard.isTrusted",
            "kind": "value",
            "name": "isTrusted",
            "signature": "let isTrusted: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Keyboard.nativeEvent",
            "kind": "value",
            "name": "nativeEvent",
            "signature": "let nativeEvent: t => {..}",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Keyboard.preventDefault",
            "kind": "value",
            "name": "preventDefault",
            "signature": "let preventDefault: t => unit",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Keyboard.isDefaultPrevented",
            "kind": "value",
            "name": "isDefaultPrevented",
            "signature": "let isDefaultPrevented: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Keyboard.stopPropagation",
            "kind": "value",
            "name": "stopPropagation",
            "signature": "let stopPropagation: t => unit",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Keyboard.isPropagationStopped",
            "kind": "value",
            "name": "isPropagationStopped",
            "signature": "let isPropagationStopped: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Keyboard.target",
            "kind": "value",
            "name": "target",
            "signature": "let target: t => {..}",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Keyboard.timeStamp",
            "kind": "value",
            "name": "timeStamp",
            "signature": "let timeStamp: t => float",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Keyboard.type_",
            "kind": "value",
            "name": "type_",
            "signature": "let type_: t => string",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Keyboard.persist",
            "kind": "value",
            "name": "persist",
            "signature": "let persist: t => unit",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Keyboard.altKey",
            "kind": "value",
            "name": "altKey",
            "signature": "let altKey: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Keyboard.charCode",
            "kind": "value",
            "name": "charCode",
            "signature": "let charCode: t => int",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Keyboard.ctrlKey",
            "kind": "value",
            "name": "ctrlKey",
            "signature": "let ctrlKey: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Keyboard.getModifierState",
            "kind": "value",
            "name": "getModifierState",
            "signature": "let getModifierState: (t, string) => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Keyboard.key",
            "kind": "value",
            "name": "key",
            "signature": "let key: t => string",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Keyboard.keyCode",
            "kind": "value",
            "name": "keyCode",
            "signature": "let keyCode: t => int",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Keyboard.locale",
            "kind": "value",
            "name": "locale",
            "signature": "let locale: t => string",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Keyboard.location",
            "kind": "value",
            "name": "location",
            "signature": "let location: t => int",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Keyboard.metaKey",
            "kind": "value",
            "name": "metaKey",
            "signature": "let metaKey: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Keyboard.repeat",
            "kind": "value",
            "name": "repeat",
            "signature": "let repeat: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Keyboard.shiftKey",
            "kind": "value",
            "name": "shiftKey",
            "signature": "let shiftKey: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Keyboard.which",
            "kind": "value",
            "name": "which",
            "signature": "let which: t => int",
            "docstrings": []
          }
        ]
      }
    },
    {
      "id": "Focus.JsxEventC",
      "kind": "module",
      "item": {
        "name": "Focus",
        "docstrings": [],
        "items": [
          {
            "id": "JsxEventC.Focus.tag",
            "kind": "type",
            "name": "tag",
            "signature": "type tag",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Focus.t",
            "kind": "type",
            "name": "t",
            "signature": "type t = synthetic<tag>",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Focus.bubbles",
            "kind": "value",
            "name": "bubbles",
            "signature": "let bubbles: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Focus.cancelable",
            "kind": "value",
            "name": "cancelable",
            "signature": "let cancelable: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Focus.currentTarget",
            "kind": "value",
            "name": "currentTarget",
            "signature": "let currentTarget: t => {..}",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Focus.defaultPrevented",
            "kind": "value",
            "name": "defaultPrevented",
            "signature": "let defaultPrevented: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Focus.eventPhase",
            "kind": "value",
            "name": "eventPhase",
            "signature": "let eventPhase: t => int",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Focus.isTrusted",
            "kind": "value",
            "name": "isTrusted",
            "signature": "let isTrusted: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Focus.nativeEvent",
            "kind": "value",
            "name": "nativeEvent",
            "signature": "let nativeEvent: t => {..}",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Focus.preventDefault",
            "kind": "value",
            "name": "preventDefault",
            "signature": "let preventDefault: t => unit",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Focus.isDefaultPrevented",
            "kind": "value",
            "name": "isDefaultPrevented",
            "signature": "let isDefaultPrevented: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Focus.stopPropagation",
            "kind": "value",
            "name": "stopPropagation",
            "signature": "let stopPropagation: t => unit",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Focus.isPropagationStopped",
            "kind": "value",
            "name": "isPropagationStopped",
            "signature": "let isPropagationStopped: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Focus.target",
            "kind": "value",
            "name": "target",
            "signature": "let target: t => {..}",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Focus.timeStamp",
            "kind": "value",
            "name": "timeStamp",
            "signature": "let timeStamp: t => float",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Focus.type_",
            "kind": "value",
            "name": "type_",
            "signature": "let type_: t => string",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Focus.persist",
            "kind": "value",
            "name": "persist",
            "signature": "let persist: t => unit",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Focus.relatedTarget",
            "kind": "value",
            "name": "relatedTarget",
            "signature": "let relatedTarget: t => option<{..}>",
            "docstrings": []
          }
        ]
      }
    },
    {
      "id": "Form.JsxEventC",
      "kind": "module",
      "item": {
        "name": "Form",
        "docstrings": [],
        "items": [
          {
            "id": "JsxEventC.Form.tag",
            "kind": "type",
            "name": "tag",
            "signature": "type tag",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Form.t",
            "kind": "type",
            "name": "t",
            "signature": "type t = synthetic<tag>",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Form.bubbles",
            "kind": "value",
            "name": "bubbles",
            "signature": "let bubbles: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Form.cancelable",
            "kind": "value",
            "name": "cancelable",
            "signature": "let cancelable: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Form.currentTarget",
            "kind": "value",
            "name": "currentTarget",
            "signature": "let currentTarget: t => {..}",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Form.defaultPrevented",
            "kind": "value",
            "name": "defaultPrevented",
            "signature": "let defaultPrevented: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Form.eventPhase",
            "kind": "value",
            "name": "eventPhase",
            "signature": "let eventPhase: t => int",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Form.isTrusted",
            "kind": "value",
            "name": "isTrusted",
            "signature": "let isTrusted: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Form.nativeEvent",
            "kind": "value",
            "name": "nativeEvent",
            "signature": "let nativeEvent: t => {..}",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Form.preventDefault",
            "kind": "value",
            "name": "preventDefault",
            "signature": "let preventDefault: t => unit",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Form.isDefaultPrevented",
            "kind": "value",
            "name": "isDefaultPrevented",
            "signature": "let isDefaultPrevented: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Form.stopPropagation",
            "kind": "value",
            "name": "stopPropagation",
            "signature": "let stopPropagation: t => unit",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Form.isPropagationStopped",
            "kind": "value",
            "name": "isPropagationStopped",
            "signature": "let isPropagationStopped: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Form.target",
            "kind": "value",
            "name": "target",
            "signature": "let target: t => {..}",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Form.timeStamp",
            "kind": "value",
            "name": "timeStamp",
            "signature": "let timeStamp: t => float",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Form.type_",
            "kind": "value",
            "name": "type_",
            "signature": "let type_: t => string",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Form.persist",
            "kind": "value",
            "name": "persist",
            "signature": "let persist: t => unit",
            "docstrings": []
          }
        ]
      }
    },
    {
      "id": "Mouse.JsxEventC",
      "kind": "module",
      "item": {
        "name": "Mouse",
        "docstrings": [],
        "items": [
          {
            "id": "JsxEventC.Mouse.tag",
            "kind": "type",
            "name": "tag",
            "signature": "type tag",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Mouse.t",
            "kind": "type",
            "name": "t",
            "signature": "type t = synthetic<tag>",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Mouse.bubbles",
            "kind": "value",
            "name": "bubbles",
            "signature": "let bubbles: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Mouse.cancelable",
            "kind": "value",
            "name": "cancelable",
            "signature": "let cancelable: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Mouse.currentTarget",
            "kind": "value",
            "name": "currentTarget",
            "signature": "let currentTarget: t => {..}",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Mouse.defaultPrevented",
            "kind": "value",
            "name": "defaultPrevented",
            "signature": "let defaultPrevented: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Mouse.eventPhase",
            "kind": "value",
            "name": "eventPhase",
            "signature": "let eventPhase: t => int",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Mouse.isTrusted",
            "kind": "value",
            "name": "isTrusted",
            "signature": "let isTrusted: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Mouse.nativeEvent",
            "kind": "value",
            "name": "nativeEvent",
            "signature": "let nativeEvent: t => {..}",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Mouse.preventDefault",
            "kind": "value",
            "name": "preventDefault",
            "signature": "let preventDefault: t => unit",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Mouse.isDefaultPrevented",
            "kind": "value",
            "name": "isDefaultPrevented",
            "signature": "let isDefaultPrevented: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Mouse.stopPropagation",
            "kind": "value",
            "name": "stopPropagation",
            "signature": "let stopPropagation: t => unit",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Mouse.isPropagationStopped",
            "kind": "value",
            "name": "isPropagationStopped",
            "signature": "let isPropagationStopped: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Mouse.target",
            "kind": "value",
            "name": "target",
            "signature": "let target: t => {..}",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Mouse.timeStamp",
            "kind": "value",
            "name": "timeStamp",
            "signature": "let timeStamp: t => float",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Mouse.type_",
            "kind": "value",
            "name": "type_",
            "signature": "let type_: t => string",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Mouse.persist",
            "kind": "value",
            "name": "persist",
            "signature": "let persist: t => unit",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Mouse.altKey",
            "kind": "value",
            "name": "altKey",
            "signature": "let altKey: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Mouse.button",
            "kind": "value",
            "name": "button",
            "signature": "let button: t => int",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Mouse.buttons",
            "kind": "value",
            "name": "buttons",
            "signature": "let buttons: t => int",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Mouse.clientX",
            "kind": "value",
            "name": "clientX",
            "signature": "let clientX: t => int",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Mouse.clientY",
            "kind": "value",
            "name": "clientY",
            "signature": "let clientY: t => int",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Mouse.ctrlKey",
            "kind": "value",
            "name": "ctrlKey",
            "signature": "let ctrlKey: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Mouse.getModifierState",
            "kind": "value",
            "name": "getModifierState",
            "signature": "let getModifierState: (t => string) => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Mouse.metaKey",
            "kind": "value",
            "name": "metaKey",
            "signature": "let metaKey: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Mouse.movementX",
            "kind": "value",
            "name": "movementX",
            "signature": "let movementX: t => int",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Mouse.movementY",
            "kind": "value",
            "name": "movementY",
            "signature": "let movementY: t => int",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Mouse.pageX",
            "kind": "value",
            "name": "pageX",
            "signature": "let pageX: t => int",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Mouse.pageY",
            "kind": "value",
            "name": "pageY",
            "signature": "let pageY: t => int",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Mouse.relatedTarget",
            "kind": "value",
            "name": "relatedTarget",
            "signature": "let relatedTarget: t => option<{..}>",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Mouse.screenX",
            "kind": "value",
            "name": "screenX",
            "signature": "let screenX: t => int",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Mouse.screenY",
            "kind": "value",
            "name": "screenY",
            "signature": "let screenY: t => int",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Mouse.shiftKey",
            "kind": "value",
            "name": "shiftKey",
            "signature": "let shiftKey: t => bool",
            "docstrings": []
          }
        ]
      }
    },
    {
      "id": "Pointer.JsxEventC",
      "kind": "module",
      "item": {
        "name": "Pointer",
        "docstrings": [],
        "items": [
          {
            "id": "JsxEventC.Pointer.tag",
            "kind": "type",
            "name": "tag",
            "signature": "type tag",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Pointer.t",
            "kind": "type",
            "name": "t",
            "signature": "type t = synthetic<tag>",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Pointer.bubbles",
            "kind": "value",
            "name": "bubbles",
            "signature": "let bubbles: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Pointer.cancelable",
            "kind": "value",
            "name": "cancelable",
            "signature": "let cancelable: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Pointer.currentTarget",
            "kind": "value",
            "name": "currentTarget",
            "signature": "let currentTarget: t => {..}",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Pointer.defaultPrevented",
            "kind": "value",
            "name": "defaultPrevented",
            "signature": "let defaultPrevented: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Pointer.eventPhase",
            "kind": "value",
            "name": "eventPhase",
            "signature": "let eventPhase: t => int",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Pointer.isTrusted",
            "kind": "value",
            "name": "isTrusted",
            "signature": "let isTrusted: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Pointer.nativeEvent",
            "kind": "value",
            "name": "nativeEvent",
            "signature": "let nativeEvent: t => {..}",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Pointer.preventDefault",
            "kind": "value",
            "name": "preventDefault",
            "signature": "let preventDefault: t => unit",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Pointer.isDefaultPrevented",
            "kind": "value",
            "name": "isDefaultPrevented",
            "signature": "let isDefaultPrevented: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Pointer.stopPropagation",
            "kind": "value",
            "name": "stopPropagation",
            "signature": "let stopPropagation: t => unit",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Pointer.isPropagationStopped",
            "kind": "value",
            "name": "isPropagationStopped",
            "signature": "let isPropagationStopped: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Pointer.target",
            "kind": "value",
            "name": "target",
            "signature": "let target: t => {..}",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Pointer.timeStamp",
            "kind": "value",
            "name": "timeStamp",
            "signature": "let timeStamp: t => float",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Pointer.type_",
            "kind": "value",
            "name": "type_",
            "signature": "let type_: t => string",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Pointer.persist",
            "kind": "value",
            "name": "persist",
            "signature": "let persist: t => unit",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Pointer.detail",
            "kind": "value",
            "name": "detail",
            "signature": "let detail: t => int",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Pointer.screenX",
            "kind": "value",
            "name": "screenX",
            "signature": "let screenX: t => int",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Pointer.screenY",
            "kind": "value",
            "name": "screenY",
            "signature": "let screenY: t => int",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Pointer.clientX",
            "kind": "value",
            "name": "clientX",
            "signature": "let clientX: t => int",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Pointer.clientY",
            "kind": "value",
            "name": "clientY",
            "signature": "let clientY: t => int",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Pointer.pageX",
            "kind": "value",
            "name": "pageX",
            "signature": "let pageX: t => int",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Pointer.pageY",
            "kind": "value",
            "name": "pageY",
            "signature": "let pageY: t => int",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Pointer.movementX",
            "kind": "value",
            "name": "movementX",
            "signature": "let movementX: t => int",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Pointer.movementY",
            "kind": "value",
            "name": "movementY",
            "signature": "let movementY: t => int",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Pointer.ctrlKey",
            "kind": "value",
            "name": "ctrlKey",
            "signature": "let ctrlKey: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Pointer.shiftKey",
            "kind": "value",
            "name": "shiftKey",
            "signature": "let shiftKey: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Pointer.altKey",
            "kind": "value",
            "name": "altKey",
            "signature": "let altKey: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Pointer.metaKey",
            "kind": "value",
            "name": "metaKey",
            "signature": "let metaKey: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Pointer.getModifierState",
            "kind": "value",
            "name": "getModifierState",
            "signature": "let getModifierState: (t => string) => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Pointer.button",
            "kind": "value",
            "name": "button",
            "signature": "let button: t => int",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Pointer.buttons",
            "kind": "value",
            "name": "buttons",
            "signature": "let buttons: t => int",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Pointer.relatedTarget",
            "kind": "value",
            "name": "relatedTarget",
            "signature": "let relatedTarget: t => option<{..}>",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Pointer.width",
            "kind": "value",
            "name": "width",
            "signature": "let width: t => float",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Pointer.height",
            "kind": "value",
            "name": "height",
            "signature": "let height: t => float",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Pointer.pressure",
            "kind": "value",
            "name": "pressure",
            "signature": "let pressure: t => float",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Pointer.tangentialPressure",
            "kind": "value",
            "name": "tangentialPressure",
            "signature": "let tangentialPressure: t => float",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Pointer.tiltX",
            "kind": "value",
            "name": "tiltX",
            "signature": "let tiltX: t => int",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Pointer.tiltY",
            "kind": "value",
            "name": "tiltY",
            "signature": "let tiltY: t => int",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Pointer.twist",
            "kind": "value",
            "name": "twist",
            "signature": "let twist: t => int",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Pointer.pointerType",
            "kind": "value",
            "name": "pointerType",
            "signature": "let pointerType: t => string",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Pointer.isPrimary",
            "kind": "value",
            "name": "isPrimary",
            "signature": "let isPrimary: t => bool",
            "docstrings": []
          }
        ]
      }
    },
    {
      "id": "Selection.JsxEventC",
      "kind": "module",
      "item": {
        "name": "Selection",
        "docstrings": [],
        "items": [
          {
            "id": "JsxEventC.Selection.tag",
            "kind": "type",
            "name": "tag",
            "signature": "type tag",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Selection.t",
            "kind": "type",
            "name": "t",
            "signature": "type t = synthetic<tag>",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Selection.bubbles",
            "kind": "value",
            "name": "bubbles",
            "signature": "let bubbles: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Selection.cancelable",
            "kind": "value",
            "name": "cancelable",
            "signature": "let cancelable: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Selection.currentTarget",
            "kind": "value",
            "name": "currentTarget",
            "signature": "let currentTarget: t => {..}",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Selection.defaultPrevented",
            "kind": "value",
            "name": "defaultPrevented",
            "signature": "let defaultPrevented: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Selection.eventPhase",
            "kind": "value",
            "name": "eventPhase",
            "signature": "let eventPhase: t => int",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Selection.isTrusted",
            "kind": "value",
            "name": "isTrusted",
            "signature": "let isTrusted: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Selection.nativeEvent",
            "kind": "value",
            "name": "nativeEvent",
            "signature": "let nativeEvent: t => {..}",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Selection.preventDefault",
            "kind": "value",
            "name": "preventDefault",
            "signature": "let preventDefault: t => unit",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Selection.isDefaultPrevented",
            "kind": "value",
            "name": "isDefaultPrevented",
            "signature": "let isDefaultPrevented: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Selection.stopPropagation",
            "kind": "value",
            "name": "stopPropagation",
            "signature": "let stopPropagation: t => unit",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Selection.isPropagationStopped",
            "kind": "value",
            "name": "isPropagationStopped",
            "signature": "let isPropagationStopped: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Selection.target",
            "kind": "value",
            "name": "target",
            "signature": "let target: t => {..}",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Selection.timeStamp",
            "kind": "value",
            "name": "timeStamp",
            "signature": "let timeStamp: t => float",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Selection.type_",
            "kind": "value",
            "name": "type_",
            "signature": "let type_: t => string",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Selection.persist",
            "kind": "value",
            "name": "persist",
            "signature": "let persist: t => unit",
            "docstrings": []
          }
        ]
      }
    },
    {
      "id": "Touch.JsxEventC",
      "kind": "module",
      "item": {
        "name": "Touch",
        "docstrings": [],
        "items": [
          {
            "id": "JsxEventC.Touch.tag",
            "kind": "type",
            "name": "tag",
            "signature": "type tag",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Touch.t",
            "kind": "type",
            "name": "t",
            "signature": "type t = synthetic<tag>",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Touch.bubbles",
            "kind": "value",
            "name": "bubbles",
            "signature": "let bubbles: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Touch.cancelable",
            "kind": "value",
            "name": "cancelable",
            "signature": "let cancelable: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Touch.currentTarget",
            "kind": "value",
            "name": "currentTarget",
            "signature": "let currentTarget: t => {..}",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Touch.defaultPrevented",
            "kind": "value",
            "name": "defaultPrevented",
            "signature": "let defaultPrevented: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Touch.eventPhase",
            "kind": "value",
            "name": "eventPhase",
            "signature": "let eventPhase: t => int",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Touch.isTrusted",
            "kind": "value",
            "name": "isTrusted",
            "signature": "let isTrusted: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Touch.nativeEvent",
            "kind": "value",
            "name": "nativeEvent",
            "signature": "let nativeEvent: t => {..}",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Touch.preventDefault",
            "kind": "value",
            "name": "preventDefault",
            "signature": "let preventDefault: t => unit",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Touch.isDefaultPrevented",
            "kind": "value",
            "name": "isDefaultPrevented",
            "signature": "let isDefaultPrevented: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Touch.stopPropagation",
            "kind": "value",
            "name": "stopPropagation",
            "signature": "let stopPropagation: t => unit",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Touch.isPropagationStopped",
            "kind": "value",
            "name": "isPropagationStopped",
            "signature": "let isPropagationStopped: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Touch.target",
            "kind": "value",
            "name": "target",
            "signature": "let target: t => {..}",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Touch.timeStamp",
            "kind": "value",
            "name": "timeStamp",
            "signature": "let timeStamp: t => float",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Touch.type_",
            "kind": "value",
            "name": "type_",
            "signature": "let type_: t => string",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Touch.persist",
            "kind": "value",
            "name": "persist",
            "signature": "let persist: t => unit",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Touch.altKey",
            "kind": "value",
            "name": "altKey",
            "signature": "let altKey: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Touch.changedTouches",
            "kind": "value",
            "name": "changedTouches",
            "signature": "let changedTouches: t => {..}",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Touch.ctrlKey",
            "kind": "value",
            "name": "ctrlKey",
            "signature": "let ctrlKey: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Touch.getModifierState",
            "kind": "value",
            "name": "getModifierState",
            "signature": "let getModifierState: (t => string) => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Touch.metaKey",
            "kind": "value",
            "name": "metaKey",
            "signature": "let metaKey: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Touch.shiftKey",
            "kind": "value",
            "name": "shiftKey",
            "signature": "let shiftKey: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Touch.targetTouches",
            "kind": "value",
            "name": "targetTouches",
            "signature": "let targetTouches: t => {..}",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Touch.touches",
            "kind": "value",
            "name": "touches",
            "signature": "let touches: t => {..}",
            "docstrings": []
          }
        ]
      }
    },
    {
      "id": "UI.JsxEventC",
      "kind": "module",
      "item": {
        "name": "UI",
        "docstrings": [],
        "items": [
          {
            "id": "JsxEventC.UI.tag",
            "kind": "type",
            "name": "tag",
            "signature": "type tag",
            "docstrings": []
          },
          {
            "id": "JsxEventC.UI.t",
            "kind": "type",
            "name": "t",
            "signature": "type t = synthetic<tag>",
            "docstrings": []
          },
          {
            "id": "JsxEventC.UI.bubbles",
            "kind": "value",
            "name": "bubbles",
            "signature": "let bubbles: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.UI.cancelable",
            "kind": "value",
            "name": "cancelable",
            "signature": "let cancelable: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.UI.currentTarget",
            "kind": "value",
            "name": "currentTarget",
            "signature": "let currentTarget: t => {..}",
            "docstrings": []
          },
          {
            "id": "JsxEventC.UI.defaultPrevented",
            "kind": "value",
            "name": "defaultPrevented",
            "signature": "let defaultPrevented: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.UI.eventPhase",
            "kind": "value",
            "name": "eventPhase",
            "signature": "let eventPhase: t => int",
            "docstrings": []
          },
          {
            "id": "JsxEventC.UI.isTrusted",
            "kind": "value",
            "name": "isTrusted",
            "signature": "let isTrusted: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.UI.nativeEvent",
            "kind": "value",
            "name": "nativeEvent",
            "signature": "let nativeEvent: t => {..}",
            "docstrings": []
          },
          {
            "id": "JsxEventC.UI.preventDefault",
            "kind": "value",
            "name": "preventDefault",
            "signature": "let preventDefault: t => unit",
            "docstrings": []
          },
          {
            "id": "JsxEventC.UI.isDefaultPrevented",
            "kind": "value",
            "name": "isDefaultPrevented",
            "signature": "let isDefaultPrevented: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.UI.stopPropagation",
            "kind": "value",
            "name": "stopPropagation",
            "signature": "let stopPropagation: t => unit",
            "docstrings": []
          },
          {
            "id": "JsxEventC.UI.isPropagationStopped",
            "kind": "value",
            "name": "isPropagationStopped",
            "signature": "let isPropagationStopped: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.UI.target",
            "kind": "value",
            "name": "target",
            "signature": "let target: t => {..}",
            "docstrings": []
          },
          {
            "id": "JsxEventC.UI.timeStamp",
            "kind": "value",
            "name": "timeStamp",
            "signature": "let timeStamp: t => float",
            "docstrings": []
          },
          {
            "id": "JsxEventC.UI.type_",
            "kind": "value",
            "name": "type_",
            "signature": "let type_: t => string",
            "docstrings": []
          },
          {
            "id": "JsxEventC.UI.persist",
            "kind": "value",
            "name": "persist",
            "signature": "let persist: t => unit",
            "docstrings": []
          },
          {
            "id": "JsxEventC.UI.detail",
            "kind": "value",
            "name": "detail",
            "signature": "let detail: t => int",
            "docstrings": []
          }
        ]
      }
    },
    {
      "id": "Wheel.JsxEventC",
      "kind": "module",
      "item": {
        "name": "Wheel",
        "docstrings": [],
        "items": [
          {
            "id": "JsxEventC.Wheel.tag",
            "kind": "type",
            "name": "tag",
            "signature": "type tag",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Wheel.t",
            "kind": "type",
            "name": "t",
            "signature": "type t = synthetic<tag>",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Wheel.bubbles",
            "kind": "value",
            "name": "bubbles",
            "signature": "let bubbles: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Wheel.cancelable",
            "kind": "value",
            "name": "cancelable",
            "signature": "let cancelable: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Wheel.currentTarget",
            "kind": "value",
            "name": "currentTarget",
            "signature": "let currentTarget: t => {..}",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Wheel.defaultPrevented",
            "kind": "value",
            "name": "defaultPrevented",
            "signature": "let defaultPrevented: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Wheel.eventPhase",
            "kind": "value",
            "name": "eventPhase",
            "signature": "let eventPhase: t => int",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Wheel.isTrusted",
            "kind": "value",
            "name": "isTrusted",
            "signature": "let isTrusted: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Wheel.nativeEvent",
            "kind": "value",
            "name": "nativeEvent",
            "signature": "let nativeEvent: t => {..}",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Wheel.preventDefault",
            "kind": "value",
            "name": "preventDefault",
            "signature": "let preventDefault: t => unit",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Wheel.isDefaultPrevented",
            "kind": "value",
            "name": "isDefaultPrevented",
            "signature": "let isDefaultPrevented: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Wheel.stopPropagation",
            "kind": "value",
            "name": "stopPropagation",
            "signature": "let stopPropagation: t => unit",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Wheel.isPropagationStopped",
            "kind": "value",
            "name": "isPropagationStopped",
            "signature": "let isPropagationStopped: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Wheel.target",
            "kind": "value",
            "name": "target",
            "signature": "let target: t => {..}",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Wheel.timeStamp",
            "kind": "value",
            "name": "timeStamp",
            "signature": "let timeStamp: t => float",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Wheel.type_",
            "kind": "value",
            "name": "type_",
            "signature": "let type_: t => string",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Wheel.persist",
            "kind": "value",
            "name": "persist",
            "signature": "let persist: t => unit",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Wheel.deltaMode",
            "kind": "value",
            "name": "deltaMode",
            "signature": "let deltaMode: t => int",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Wheel.deltaX",
            "kind": "value",
            "name": "deltaX",
            "signature": "let deltaX: t => float",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Wheel.deltaY",
            "kind": "value",
            "name": "deltaY",
            "signature": "let deltaY: t => float",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Wheel.deltaZ",
            "kind": "value",
            "name": "deltaZ",
            "signature": "let deltaZ: t => float",
            "docstrings": []
          }
        ]
      }
    },
    {
      "id": "Media.JsxEventC",
      "kind": "module",
      "item": {
        "name": "Media",
        "docstrings": [],
        "items": [
          {
            "id": "JsxEventC.Media.tag",
            "kind": "type",
            "name": "tag",
            "signature": "type tag",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Media.t",
            "kind": "type",
            "name": "t",
            "signature": "type t = synthetic<tag>",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Media.bubbles",
            "kind": "value",
            "name": "bubbles",
            "signature": "let bubbles: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Media.cancelable",
            "kind": "value",
            "name": "cancelable",
            "signature": "let cancelable: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Media.currentTarget",
            "kind": "value",
            "name": "currentTarget",
            "signature": "let currentTarget: t => {..}",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Media.defaultPrevented",
            "kind": "value",
            "name": "defaultPrevented",
            "signature": "let defaultPrevented: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Media.eventPhase",
            "kind": "value",
            "name": "eventPhase",
            "signature": "let eventPhase: t => int",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Media.isTrusted",
            "kind": "value",
            "name": "isTrusted",
            "signature": "let isTrusted: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Media.nativeEvent",
            "kind": "value",
            "name": "nativeEvent",
            "signature": "let nativeEvent: t => {..}",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Media.preventDefault",
            "kind": "value",
            "name": "preventDefault",
            "signature": "let preventDefault: t => unit",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Media.isDefaultPrevented",
            "kind": "value",
            "name": "isDefaultPrevented",
            "signature": "let isDefaultPrevented: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Media.stopPropagation",
            "kind": "value",
            "name": "stopPropagation",
            "signature": "let stopPropagation: t => unit",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Media.isPropagationStopped",
            "kind": "value",
            "name": "isPropagationStopped",
            "signature": "let isPropagationStopped: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Media.target",
            "kind": "value",
            "name": "target",
            "signature": "let target: t => {..}",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Media.timeStamp",
            "kind": "value",
            "name": "timeStamp",
            "signature": "let timeStamp: t => float",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Media.type_",
            "kind": "value",
            "name": "type_",
            "signature": "let type_: t => string",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Media.persist",
            "kind": "value",
            "name": "persist",
            "signature": "let persist: t => unit",
            "docstrings": []
          }
        ]
      }
    },
    {
      "id": "Image.JsxEventC",
      "kind": "module",
      "item": {
        "name": "Image",
        "docstrings": [],
        "items": [
          {
            "id": "JsxEventC.Image.tag",
            "kind": "type",
            "name": "tag",
            "signature": "type tag",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Image.t",
            "kind": "type",
            "name": "t",
            "signature": "type t = synthetic<tag>",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Image.bubbles",
            "kind": "value",
            "name": "bubbles",
            "signature": "let bubbles: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Image.cancelable",
            "kind": "value",
            "name": "cancelable",
            "signature": "let cancelable: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Image.currentTarget",
            "kind": "value",
            "name": "currentTarget",
            "signature": "let currentTarget: t => {..}",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Image.defaultPrevented",
            "kind": "value",
            "name": "defaultPrevented",
            "signature": "let defaultPrevented: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Image.eventPhase",
            "kind": "value",
            "name": "eventPhase",
            "signature": "let eventPhase: t => int",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Image.isTrusted",
            "kind": "value",
            "name": "isTrusted",
            "signature": "let isTrusted: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Image.nativeEvent",
            "kind": "value",
            "name": "nativeEvent",
            "signature": "let nativeEvent: t => {..}",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Image.preventDefault",
            "kind": "value",
            "name": "preventDefault",
            "signature": "let preventDefault: t => unit",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Image.isDefaultPrevented",
            "kind": "value",
            "name": "isDefaultPrevented",
            "signature": "let isDefaultPrevented: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Image.stopPropagation",
            "kind": "value",
            "name": "stopPropagation",
            "signature": "let stopPropagation: t => unit",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Image.isPropagationStopped",
            "kind": "value",
            "name": "isPropagationStopped",
            "signature": "let isPropagationStopped: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Image.target",
            "kind": "value",
            "name": "target",
            "signature": "let target: t => {..}",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Image.timeStamp",
            "kind": "value",
            "name": "timeStamp",
            "signature": "let timeStamp: t => float",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Image.type_",
            "kind": "value",
            "name": "type_",
            "signature": "let type_: t => string",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Image.persist",
            "kind": "value",
            "name": "persist",
            "signature": "let persist: t => unit",
            "docstrings": []
          }
        ]
      }
    },
    {
      "id": "Animation.JsxEventC",
      "kind": "module",
      "item": {
        "name": "Animation",
        "docstrings": [],
        "items": [
          {
            "id": "JsxEventC.Animation.tag",
            "kind": "type",
            "name": "tag",
            "signature": "type tag",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Animation.t",
            "kind": "type",
            "name": "t",
            "signature": "type t = synthetic<tag>",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Animation.bubbles",
            "kind": "value",
            "name": "bubbles",
            "signature": "let bubbles: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Animation.cancelable",
            "kind": "value",
            "name": "cancelable",
            "signature": "let cancelable: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Animation.currentTarget",
            "kind": "value",
            "name": "currentTarget",
            "signature": "let currentTarget: t => {..}",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Animation.defaultPrevented",
            "kind": "value",
            "name": "defaultPrevented",
            "signature": "let defaultPrevented: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Animation.eventPhase",
            "kind": "value",
            "name": "eventPhase",
            "signature": "let eventPhase: t => int",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Animation.isTrusted",
            "kind": "value",
            "name": "isTrusted",
            "signature": "let isTrusted: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Animation.nativeEvent",
            "kind": "value",
            "name": "nativeEvent",
            "signature": "let nativeEvent: t => {..}",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Animation.preventDefault",
            "kind": "value",
            "name": "preventDefault",
            "signature": "let preventDefault: t => unit",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Animation.isDefaultPrevented",
            "kind": "value",
            "name": "isDefaultPrevented",
            "signature": "let isDefaultPrevented: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Animation.stopPropagation",
            "kind": "value",
            "name": "stopPropagation",
            "signature": "let stopPropagation: t => unit",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Animation.isPropagationStopped",
            "kind": "value",
            "name": "isPropagationStopped",
            "signature": "let isPropagationStopped: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Animation.target",
            "kind": "value",
            "name": "target",
            "signature": "let target: t => {..}",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Animation.timeStamp",
            "kind": "value",
            "name": "timeStamp",
            "signature": "let timeStamp: t => float",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Animation.type_",
            "kind": "value",
            "name": "type_",
            "signature": "let type_: t => string",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Animation.persist",
            "kind": "value",
            "name": "persist",
            "signature": "let persist: t => unit",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Animation.animationName",
            "kind": "value",
            "name": "animationName",
            "signature": "let animationName: t => string",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Animation.pseudoElement",
            "kind": "value",
            "name": "pseudoElement",
            "signature": "let pseudoElement: t => string",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Animation.elapsedTime",
            "kind": "value",
            "name": "elapsedTime",
            "signature": "let elapsedTime: t => float",
            "docstrings": []
          }
        ]
      }
    },
    {
      "id": "Transition.JsxEventC",
      "kind": "module",
      "item": {
        "name": "Transition",
        "docstrings": [],
        "items": [
          {
            "id": "JsxEventC.Transition.tag",
            "kind": "type",
            "name": "tag",
            "signature": "type tag",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Transition.t",
            "kind": "type",
            "name": "t",
            "signature": "type t = synthetic<tag>",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Transition.bubbles",
            "kind": "value",
            "name": "bubbles",
            "signature": "let bubbles: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Transition.cancelable",
            "kind": "value",
            "name": "cancelable",
            "signature": "let cancelable: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Transition.currentTarget",
            "kind": "value",
            "name": "currentTarget",
            "signature": "let currentTarget: t => {..}",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Transition.defaultPrevented",
            "kind": "value",
            "name": "defaultPrevented",
            "signature": "let defaultPrevented: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Transition.eventPhase",
            "kind": "value",
            "name": "eventPhase",
            "signature": "let eventPhase: t => int",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Transition.isTrusted",
            "kind": "value",
            "name": "isTrusted",
            "signature": "let isTrusted: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Transition.nativeEvent",
            "kind": "value",
            "name": "nativeEvent",
            "signature": "let nativeEvent: t => {..}",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Transition.preventDefault",
            "kind": "value",
            "name": "preventDefault",
            "signature": "let preventDefault: t => unit",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Transition.isDefaultPrevented",
            "kind": "value",
            "name": "isDefaultPrevented",
            "signature": "let isDefaultPrevented: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Transition.stopPropagation",
            "kind": "value",
            "name": "stopPropagation",
            "signature": "let stopPropagation: t => unit",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Transition.isPropagationStopped",
            "kind": "value",
            "name": "isPropagationStopped",
            "signature": "let isPropagationStopped: t => bool",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Transition.target",
            "kind": "value",
            "name": "target",
            "signature": "let target: t => {..}",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Transition.timeStamp",
            "kind": "value",
            "name": "timeStamp",
            "signature": "let timeStamp: t => float",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Transition.type_",
            "kind": "value",
            "name": "type_",
            "signature": "let type_: t => string",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Transition.persist",
            "kind": "value",
            "name": "persist",
            "signature": "let persist: t => unit",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Transition.propertyName",
            "kind": "value",
            "name": "propertyName",
            "signature": "let propertyName: t => string",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Transition.pseudoElement",
            "kind": "value",
            "name": "pseudoElement",
            "signature": "let pseudoElement: t => string",
            "docstrings": []
          },
          {
            "id": "JsxEventC.Transition.elapsedTime",
            "kind": "value",
            "name": "elapsedTime",
            "signature": "let elapsedTime: t => float",
            "docstrings": []
          }
        ]
      }
    }
  ]
}