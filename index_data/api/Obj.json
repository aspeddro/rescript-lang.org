{
  "name": "Obj",
  "docstrings": [],
  "items": [
    {
      "id": "Obj.t",
      "kind": "type",
      "name": "t",
      "signature": "type t",
      "docstrings": []
    },
    {
      "id": "Obj.repr",
      "kind": "value",
      "name": "repr",
      "signature": "let repr: 'a => t",
      "docstrings": []
    },
    {
      "id": "Obj.obj",
      "kind": "value",
      "name": "obj",
      "signature": "let obj: t => 'a",
      "docstrings": []
    },
    {
      "id": "Obj.magic",
      "kind": "value",
      "name": "magic",
      "signature": "let magic: 'a => 'b",
      "docstrings": []
    },
    {
      "id": "Obj.is_block",
      "kind": "value",
      "name": "is_block",
      "signature": "let is_block: t => bool",
      "docstrings": []
    },
    {
      "id": "Obj.tag",
      "kind": "value",
      "name": "tag",
      "signature": "let tag: t => int",
      "docstrings": []
    },
    {
      "id": "Obj.size",
      "kind": "value",
      "name": "size",
      "signature": "let size: t => int",
      "docstrings": []
    },
    {
      "id": "Obj.field",
      "kind": "value",
      "name": "field",
      "signature": "let field: (t, int) => t",
      "docstrings": []
    },
    {
      "id": "Obj.set_field",
      "kind": "value",
      "name": "set_field",
      "signature": "let set_field: (t, int, t) => unit",
      "docstrings": [
        "When using flambda:\n\n    [set_field] MUST NOT be called on immutable blocks.  (Blocks allocated\n    in C stubs, or with [new_block] below, are always considered mutable.)\n    \n    For experts only:\n    [set_field] et al can be made safe by first wrapping the block in\n    {!Sys.opaque_identity}, so any information about its contents will not\n    be propagated."
      ]
    },
    {
      "id": "Obj.dup",
      "kind": "value",
      "name": "dup",
      "signature": "let dup: t => t",
      "docstrings": []
    }
  ]
}