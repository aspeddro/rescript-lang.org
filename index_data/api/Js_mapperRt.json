{
  "name": "Js_mapperRt",
  "docstrings": [],
  "items": [
    {
      "id": "Js_mapperRt.raiseWhenNotFound",
      "kind": "value",
      "name": "raiseWhenNotFound",
      "signature": "let raiseWhenNotFound: 'a => 'a",
      "docstrings": []
    },
    {
      "id": "Js_mapperRt.fromInt",
      "kind": "value",
      "name": "fromInt",
      "signature": "let fromInt: (int, array<int>, int) => option<int>",
      "docstrings": [
        "`fromInt len array int`\n  return the mapped `enum`"
      ]
    },
    {
      "id": "Js_mapperRt.fromIntAssert",
      "kind": "value",
      "name": "fromIntAssert",
      "signature": "let fromIntAssert: (int, array<int>, int) => int",
      "docstrings": []
    }
  ]
}